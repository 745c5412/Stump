using Stump.Core.IO;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Game.Interactives;
using System;

namespace Stump.Server.WorldServer.Database.Interactives
{
    public class InteractiveSkillTemplateRelator
    {
        public static string FetchQuery = "SELECT * FROM interactives_skills_templates";
    }

    [TableName("interactives_skills_templates")]
    [D2OClass("Skill")]
    public class InteractiveSkillTemplate : IAssignedByD2O, IAutoGeneratedRecord
    {
        private int[] m_craftableItemIds;
        private string m_craftableItemIdsCSV;
        private InteractiveTemplate m_interactive;

        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }

        public uint NameId
        {
            get;
            set;
        }

        public int ParentJobId
        {
            get;
            set;
        }

        public bool IsForgemagus
        {
            get;
            set;
        }

        public int ModifiableItemType
        {
            get;
            set;
        }

        public int GatheredRessourceItem
        {
            get;
            set;
        }

        public string CraftableItemIdsCSV
        {
            get { return m_craftableItemIdsCSV; }
            set
            {
                m_craftableItemIdsCSV = value;
                m_craftableItemIds = CraftableItemIdsCSV.FromCSV<int>(",");
            }
        }

        public int InteractiveId
        {
            get;
            set;
        }

        public String UseAnimation
        {
            get;
            set;
        }

        public Boolean IsRepair
        {
            get;
            set;
        }

        public int Cursor
        {
            get;
            set;
        }

        public Boolean AvailableInHouse
        {
            get;
            set;
        }

        public uint LevelMin
        {
            get;
            set;
        }

        [Ignore]
        public int[] CraftableItemIds
        {
            get { return m_craftableItemIds ?? (m_craftableItemIds = CraftableItemIdsCSV.FromCSV<int>(",")); }
            set
            {
                m_craftableItemIds = value;
                CraftableItemIdsCSV = value.ToCSV(",");
            }
        }

        public InteractiveTemplate Interactive
        {
            get { return m_interactive ?? (m_interactive = InteractiveManager.Instance.GetTemplate(InteractiveId)); }
        }

        #region IAssignedByD2O Members

        public void AssignFields(object d2oObject)
        {
            var skill = (Skill)d2oObject;

            Id = skill.id;
            NameId = skill.nameId;
            ParentJobId = skill.parentJobId;
            IsForgemagus = skill.isForgemagus;
            ModifiableItemType = skill.modifiableItemType;
            GatheredRessourceItem = skill.gatheredRessourceItem;
            CraftableItemIds = skill.craftableItemIds.ToArray();
            InteractiveId = skill.interactiveId;
            UseAnimation = skill.useAnimation;
            IsRepair = skill.isRepair;
            Cursor = skill.cursor;
            AvailableInHouse = skill.availableInHouse;
            LevelMin = skill.levelMin;
        }

        #endregion IAssignedByD2O Members
    }
}