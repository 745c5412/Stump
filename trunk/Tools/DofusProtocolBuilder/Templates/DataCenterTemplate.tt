<#@ template language="C#" debug="true"  #>
<#@ output extension=".cs" #>
<#@ assembly name="System.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="DofusProtocolBuilder.Parsing" #>
<#@ parameter name="Parser" type="DofusProtocolBuilder.Parsing.Parser" #>
<#@ parameter name="Profile" type="DofusProtocolBuilder.Profiles.ParsingProfile" #>
<#@ include file="./Helper.tt"#>
// Generated on <#= DateTime.Now #>
using System;
using System.Collections.Generic;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;

namespace <#= Profile.OutPutNamespace #>
{
<# PushIndent("    "); #>
<# 
var idField = Parser.Fields.FirstOrDefault(x => x.Name == "id");
#>
<# WriteLine("[D2OClass(\"" + Parser.Class.Name + "\", \"" + Parser.Class.Namespace + "\")]"); #>
[Serializable]
public class <#=Parser.Class.Name #><#=( Parser.Class.Heritage != "Object" ? (" : " + Parser.Class.Heritage) : (" : IDataObject" + (idField != null ? ", IIndexedData" : "")) ) #>
{
<# PushIndent("    "); #>
<#
foreach (var field in Parser.Fields)
{
	if (field.Modifiers != AccessModifiers.Public && field.Name != "MODULE")
		continue;

    WriteField(field);
} 

if (idField != null)
{
    WriteLine("int IIndexedData.Id");
    WriteLine("{");
    WriteLine("    get { return (int)id; }");
    WriteLine("}");
}

foreach (var field in Parser.Fields)
{
    if (field.Modifiers != AccessModifiers.Public || field.IsConst || field.IsStatic || field.Name == "MODULE")
        continue;

    var name = ToPascalCase(field.Name);

    if (name == Parser.Class.Name)
        name += "_";
    
    WriteLine("[D2OIgnore]");
    Write("public ");
    Write(field.Type);
    WriteLine(" " + name);
    WriteLine("{");
    WriteLine("    get { return " + field.Name + "; }");
    WriteLine("    set { " + field.Name + " = value; }");
    WriteLine("}");
}

#>
<# PopIndent(); #>
}
<# PopIndent(); #>
}