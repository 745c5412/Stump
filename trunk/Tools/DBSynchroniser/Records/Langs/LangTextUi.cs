using System;
using Stump.Core.I18N;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;

namespace DBSynchroniser.Records.Langs
{
    public class LangTextUiRelator
    {
        public static string FetchQuery = "SELECT * FROM langs_ui";
    }

    [TableName("langs_ui")]
    public class LangTextUi : IAutoGeneratedRecord
    {
        // Primitive properties

        #region ILangTextUI Members

        [PrimaryKey("Id")]
        public uint Id
        {
            get;
            set;
        }
        
        public string Name
        {
            get;
            set;
        }

        
        [NullString]
        public string French
        {
            get;
            set;
        }

        
        [NullString]
        public string English
        {
            get;
            set;
        }

        
        [NullString]
        public string German
        {
            get;
            set;
        }

        
        [NullString]
        public string Spanish
        {
            get;
            set;
        }

        
        [NullString]
        public string Italian
        {
            get;
            set;
        }

        
        [NullString]
        public string Japanish
        {
            get;
            set;
        }

        
        [NullString]
        public string Dutsh
        {
            get;
            set;
        }

        
        [NullString]
        public string Portugese
        {
            get;
            set;
        }

        
        [NullString]
        public string Russish
        {
            get;
            set;
        }

        public void SetAllLangs(string text)
        {
            French =
                German =
                English =
                Dutsh =
                Japanish = Spanish = Italian = Russish = Portugese = text;
        }

        public string GetText(Languages language)
        {
            switch (language)
            {
                case Languages.French:
                    return French;
                case Languages.German:
                    return German;
                case Languages.Dutsh:
                    return French;
                case Languages.Italian:
                    return Italian;
                case Languages.English:
                    return English;
                case Languages.Japanish:
                    return Japanish;
                case Languages.Russish:
                    return Russish;
                case Languages.Spanish:
                    return Spanish;
                case Languages.Portugese:
                    return Portugese;
                default:
                    throw new Exception(string.Format("Language {0} not handled", language));
            }
        }

        #endregion
    
        
        public LangTextUi Copy()
        {
            return (LangTextUi) MemberwiseClone();
        }
    }
}