// File generated by 'DofusProtocolBuilder.exe v1.0.0.0'
// From 'CharacterHardcoreInformations.xml' the '14/06/2011 11:32:45'
using System;
using Stump.BaseCore.Framework.IO;

namespace Stump.DofusProtocol.Types
{
	public class CharacterHardcoreInformations : CharacterBaseInformations
	{
		public const uint Id = 86;
		public short TypeId
		{
			get
			{
				return 86;
			}
		}
		
		public byte deathState;
		public short deathCount;
		public byte deathMaxLevel;
		
		public CharacterHardcoreInformations()
		{
		}
		
		public CharacterHardcoreInformations(int id, byte level, string name, Types.EntityLook entityLook, byte breed, bool sex, byte deathState, short deathCount, byte deathMaxLevel)
			 : base(id, level, name, entityLook, breed, sex)
		{
			this.deathState = deathState;
			this.deathCount = deathCount;
			this.deathMaxLevel = deathMaxLevel;
		}
		
		public override void Serialize(IDataWriter writer)
		{
			base.Serialize(writer);
			writer.WriteByte(deathState);
			writer.WriteShort(deathCount);
			writer.WriteByte(deathMaxLevel);
		}
		
		public override void Deserialize(IDataReader reader)
		{
			base.Deserialize(reader);
			deathState = reader.ReadByte();
			if ( deathState < 0 )
			{
				throw new Exception("Forbidden value on deathState = " + deathState + ", it doesn't respect the following condition : deathState < 0");
			}
			deathCount = reader.ReadShort();
			if ( deathCount < 0 )
			{
				throw new Exception("Forbidden value on deathCount = " + deathCount + ", it doesn't respect the following condition : deathCount < 0");
			}
			deathMaxLevel = reader.ReadByte();
			if ( deathMaxLevel < 1 || deathMaxLevel > 200 )
			{
				throw new Exception("Forbidden value on deathMaxLevel = " + deathMaxLevel + ", it doesn't respect the following condition : deathMaxLevel < 1 || deathMaxLevel > 200");
			}
		}
	}
}
