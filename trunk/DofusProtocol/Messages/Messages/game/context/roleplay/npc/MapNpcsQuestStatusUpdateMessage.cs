// File generated by 'DofusProtocolBuilder.exe v1.0.0.0'
// From 'MapNpcsQuestStatusUpdateMessage.xml' the '22/08/2011 17:22:56'
using System;
using Stump.Core.IO;
using System.Collections.Generic;
using System.Linq;

namespace Stump.DofusProtocol.Messages
{
	public class MapNpcsQuestStatusUpdateMessage : Message
	{
		public const uint Id = 5642;
		public override uint MessageId
		{
			get
			{
				return 5642;
			}
		}
		
		public int mapId;
		public IEnumerable<int> npcsIdsCanGiveQuest;
		public IEnumerable<int> npcsIdsCannotGiveQuest;
		
		public MapNpcsQuestStatusUpdateMessage()
		{
		}
		
		public MapNpcsQuestStatusUpdateMessage(int mapId, IEnumerable<int> npcsIdsCanGiveQuest, IEnumerable<int> npcsIdsCannotGiveQuest)
		{
			this.mapId = mapId;
			this.npcsIdsCanGiveQuest = npcsIdsCanGiveQuest;
			this.npcsIdsCannotGiveQuest = npcsIdsCannotGiveQuest;
		}
		
		public override void Serialize(IDataWriter writer)
		{
			writer.WriteInt(mapId);
			writer.WriteUShort((ushort)npcsIdsCanGiveQuest.Count());
			foreach (var entry in npcsIdsCanGiveQuest)
			{
				writer.WriteInt(entry);
			}
			writer.WriteUShort((ushort)npcsIdsCannotGiveQuest.Count());
			foreach (var entry in npcsIdsCannotGiveQuest)
			{
				writer.WriteInt(entry);
			}
		}
		
		public override void Deserialize(IDataReader reader)
		{
			mapId = reader.ReadInt();
			int limit = reader.ReadUShort();
			npcsIdsCanGiveQuest = new int[limit];
			for (int i = 0; i < limit; i++)
			{
				(npcsIdsCanGiveQuest as int[])[i] = reader.ReadInt();
			}
			limit = reader.ReadUShort();
			npcsIdsCannotGiveQuest = new int[limit];
			for (int i = 0; i < limit; i++)
			{
				(npcsIdsCannotGiveQuest as int[])[i] = reader.ReadInt();
			}
		}
	}
}
