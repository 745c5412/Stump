using System;
using System.Collections.Generic;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;

namespace Stump.Server.WorldServer.Database.Accounts
{
    public class WorldAccountRelator
    {
        public static string FetchQuery = "SELECT * FROM accounts";
        /// <summary>
        /// Use string.Format
        /// </summary>
        public static string FetchById = "SELECT * FROM accounts WHERE Id={0}";
        /// <summary>
        /// Use parameters
        /// </summary>
        public static string FetchByNickname = "SELECT * FROM accounts WHERE Nickname=@0";

        public static string FetchByCharacterId = "SELECT * FROM worlds_characters WHERE CharacterId={0}";
    }

    [TableName("accounts")]
    public class WorldAccount : IAutoGeneratedRecord
    {
        public WorldAccount()
        {
        }

        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }

        public string Nickname
        {
            get;
            set;
        }

        public DateTime? LastConnection
        {
            get;
            set;
        }

        [NullString]
        public string LastIp
        {
            get;
            set;
        }

        public int? ConnectedCharacter
        {
            get;
            set;
        }

        /*[Ignore]
        public virtual ICollection<StartupAction> StartupActions
        {
            get;
            set;
        }*/

        public int LastConnectionTimeStamp
        {
            get { return LastConnection.HasValue ? (int) (DateTime.Now - LastConnection.Value).TotalHours : 0; }
        }

        /*public StartupAction[] GetStartupActions()
        {
            return StartupActions.Select(entry => new StartupAction(entry)).ToArray();
        }*/
    }
}