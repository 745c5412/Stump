using System.Collections.Generic;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.Enums;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;
using Stump.Server.WorldServer.Database.I18n;

namespace Stump.Server.WorldServer.Database.Interactives
{
    public class InteractiveTemplateRelator
    {
        public static string FetchQuery = "SELECT * FROM interactives_templates " +
                                          "LEFT JOIN interactives_templates_skills ON interactives_templates_skills.InteractiveTemplateId=interactives_templates.Id " +
                                          "LEFT JOIN interactives_skills ON interactives_skills.Id=interactives_templates_skills.SkillId";

        private InteractiveTemplate m_current;

        public InteractiveTemplate Map(InteractiveTemplate template, InteractiveTemplateSkills dummy,
                                       InteractiveSkillRecord skill)
        {
            if (template == null)
                return m_current;

            if (m_current != null && m_current.Id == template.Id)
            {
                m_current.Skills.Add(skill);
                return null;
            }

            InteractiveTemplate previous = m_current;

            m_current = template;
            m_current.Skills.Add(skill);

            return previous;
        }
    }

    [TableName("interactives_templates_skills")]
    public class InteractiveTemplateSkills : IAutoGeneratedRecord
    {
        [PrimaryKey("InteractiveTemplateId", false)]
        public int InteractiveTemplateId
        {
            get;
            set;
        }

        //[PrimaryKey("SkillId", false)]
        public int SkillId
        {
            get;
            set;
        }
    }


    [TableName("interactives_templates")]
    [D2OClass("Interactive", "com.ankamagames.dofus.datacenter.interactives")]
    public class InteractiveTemplate : IAssignedByD2O, IAutoGeneratedRecord
    {
        private string m_name;

        public InteractiveTemplate()
        {
            Skills = new List<InteractiveSkillRecord>();
        }

        [PrimaryKey("Id", false)]
        public int Id
        {
            get;
            set;
        }

        public InteractiveTypeEnum Type
        {
            get { return (InteractiveTypeEnum) Id; }
        }

        public uint NameId
        {
            get;
            set;
        }

        public string Name
        {
            get { return m_name ?? (m_name = TextManager.Instance.GetText(NameId)); }
        }

        public int ActionId
        {
            get;
            set;
        }

        public bool DisplayTooltip
        {
            get;
            set;
        }

        [Ignore]
        public List<InteractiveSkillRecord> Skills
        {
            get;
            set;
        }

        #region IAssignedByD2O Members

        public void AssignFields(object d2oObject)
        {
            var template = (Interactive) d2oObject;
            Id = template.id;
            NameId = template.nameId;
            ActionId = template.actionId;
            DisplayTooltip = template.displayTooltip;
        }

        #endregion
    }
}