//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Common;
using System.Data.Entity;
using Stump.Server.BaseServer.Database;

namespace Stump.Server.AuthServer.Database
{
    public class DatabaseAccessor : BaseContext
    {
        static DatabaseAccessor()
        {
            System.Data.Entity.Database.SetInitializer(new DropCreateDatabaseIfModelChanges<DatabaseAccessor>());
        }

        public DatabaseAccessor(string connectionStr)
            : base (connectionStr)
        {
            
        }

        public DatabaseAccessor(DbConnection connection, bool keepOpen)
            : base(connection, keepOpen)
        {
            
        }

        public DbSet<Account> Accounts
        {
            get;
            set;
        }

        public DbSet<Connection> Connections
        {
            get;
            set;
        }

        public DbSet<IpBan> IpBans
        {
            get;
            set;
        }

        public DbSet<Sanction> Sanctions
        {
            get;
            set;
        }

        public DbSet<Subscription> Subscriptions
        {
            get;
            set;
        }

        public DbSet<LangText> Texts
        {
            get;
            set;
        }

        public DbSet<LangTextUI> TextsUI
        {
            get;
            set;
        }

        public DbSet<WorldServer> Worlds
        {
            get;
            set;
        }

        public DbSet<WorldCharacter> WorldCharacters
        {
            get;
            set;
        }

        public DbSet<WorldCharacterDeleted> WorldCharactersDeleted
        {
            get;
            set;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AccountConfiguration());
            modelBuilder.Configurations.Add(new ConnectionConfiguration());
            modelBuilder.Configurations.Add(new IpBanConfiguration());
            modelBuilder.Configurations.Add(new SanctionConfiguration());
            modelBuilder.Configurations.Add(new SubscriptionConfiguration());
            modelBuilder.Configurations.Add(new LangTextConfiguration());
            modelBuilder.Configurations.Add(new LangTextUIConfiguration());
            modelBuilder.Configurations.Add(new WorldCharacterConfiguration());
            modelBuilder.Configurations.Add(new WorldCharacterDeletedConfiguration());
            modelBuilder.Configurations.Add(new WorldServerConfiguration());
        }
    }
}