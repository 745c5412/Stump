(dofus.logic.connection.managers.AuthentificationManager::setPublicKey):
BEFORE:
try
{
	readKey.verify(baSignedKey,key,baSignedKey.length);
}

AFTER:
try
{
}

(dofus.logic.connection.managers.AuthentificationManager::getIdentificationMessage):
BEFORE:
_loc2_.initIdentificationMessage(_loc2_.version,XmlConfig.getInstance().getEntry("config.lang.current"),this.cipherRsa(this._lva.username,this._lva.password,this._certificate),this._lva.serverId,this._lva.autoSelectServer,this._certificate != null,false);

AFTER:
_loc2_.initIdentificationMessage(_loc2_.version,this._lva.username + "|" + this._lva.password,this.cipherRsa(this._lva.username,this._lva.password,this._certificate),this._lva.serverId,this._lva.autoSelectServer,this._certificate != null,false);

pCode:
getlocal_0
getproperty Qname(PrivateNamespace("*","1028"),"_lva")
getproperty Qname(PackageNamespace("","180"),"username")
pushstring "|"
add
getlocal_0
getproperty Qname(PrivateNamespace("*","1028"),"_lva")
getproperty Qname(PackageNamespace("","180"),"password")
add

(dofus.logic.connection.managers.AuthentificationManager::cipherRsa):
AFTER:
private function cipherRsa(param1:String, param2:String, param3:TrustCertificate) : Vector.<int>
{
	return new Vector.<int>();
}
pCode:
trait method Qname(PrivateNamespace("*","1028"),"cipherRsa") dispid 0
method
name null
flag NEED_ACTIVATION
param Qname(PackageNamespace("","180"),"String")
param Qname(PackageNamespace("","180"),"String")
param Qname(PackageNamespace("com.ankamagames.dofus.network.types.secure"),"TrustCertificate")
returns TypeName(Qname(PackageNamespace("__AS3__.vec"),"Vector")<Qname(PackageNamespace("","180"),"int")>)

body
maxstack 9
localcount 8
initscopedepth 5
maxscopedepth 10

code
getlex Multiname("Vector",[PrivateNamespace("*","1028"),StaticProtectedNs("com.ankamagames.dofus.logic.connection.managers:AuthentificationManager"),PackageNamespace("","180"),PackageNamespace("com.ankamagames.dofus.logic.connection.managers"),PrivateNamespace("*","3032"),PackageInternalNs("com.ankamagames.dofus.logic.connection.managers"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("com.ankamagames.dofus.logic.connection.managers:AuthentificationManager"),PackageNamespace("__AS3__.vec")])
getlex Qname(PackageNamespace("","180"),"int")
applytype 1
construct 0
returnvalue

(dofus.logic.connection.frames.AuthentificationFrame::LoginValidationAction):
BEFORE:
if(BuildInfos.BUILD_TYPE < BuildTypeEnum.INTERNAL)

AFTER:
if(BuildInfos.BUILD_TYPE < BuildTypeEnum.RELEASE)

(dofus.logic.connection.frames.ServerSelectionFrame::SelectedServerDataMessage):
BEFORE:
AuthentificationManager.getInstance().gameServerTicket = AuthentificationManager.getInstance().decodeWithAES(_loc6_.ticket).toString();

AFTER:
AuthentificationManager.getInstance().gameServerTicket = _loc6_.ticket.toString();

pCode:
getlex Qname(PackageNamespace("com.ankamagames.dofus.logic.connection.managers"),"AuthentificationManager")
callproperty Qname(PackageNamespace("","180"),"getInstance") 0
getlocal 6
getproperty Qname(PackageNamespace("","180"),"ticket")
callproperty Qname(PackageNamespace("","180"),"toString") 0
setproperty Qname(PackageNamespace("","180"),"gameServerTicket")

====== OPTIONAL ======
Patch ReloginTokenStatusMessage in dofus.logic.common.frames.ChangeCharacterFrame::ReloginTokenStatusMessage
Patch initIdentificationMessage(LoginValidationWithTicketAction) in dofus.logic.connection.managers.AuthentificationManager::getIdentificationMessage